c
continue
c
b bannerizer.rb:60
c
b bannerizer.rb:58 if parts.size != 0
b bannerizer.rb:59 if parts.size != 0
l
break
break --help
c
b bannerizer.rb:53 if parts.size == 1
c
b bannerizer.rb if parts.size == 1
c
b 53
source .my_session1 
b 55 parts.size == 1
save .my_session1
disp middle
disp parts
break if parts.size == 1
source .byebug_history 
source
save
source
pp
disp parts
disp middle
s
c 61
info b
b
continue
s
pry
c
cond 1 middle
b 61
s
disp middle
disp parts
s
c
b Object#create_middle if parts.size == 2
b create_middle if parts.size == 2
s
c
break 56 if parts
s
n
help break
c
break 55 if parts.size == 2
s
n
l
help break
break if parts.size == 2
c
break if parts == ["This is an example of a really very extremely long string that will have to", "be wrapped."]
help break
help breakk
c
s
disp new_section
s
disp middle
s
l
help
s
remove bookend_spaces(parts)
s
disp parts
continue
s
disp new_section
disp middle
c
n
up
n
s
n
finish
n
disp middle
disp new_section
continue
s
display middle
watch middle
s
n
s
disp parts
s
c
b 61
l-
l
l-
l
help list
help
help lisst
continue
s
l 100
l ?
l -h
l --help
l -a
l
l 10
l -10
parts
s
n
continue
c
finish
continue
actual.size
s
actual.size
s
expected.size
s
c
up
s
up
s
disp char
disp dups_removed
disp dups_removed, char
s
continue
s
disp char
s
disp dups_removed
s
continue
s
disp dups_removed
d dups_removed
continue
s
disp dups_removed
watch dups_removed
s
q
edit crunch
continue
s
string = 'hello'
n
s
string = 'hello'
n
q
exit
continue
s
n
up
s
n
s
up
s
n
continue
help
n
list
info file
n
b 37
c
b 38
s
string = 'hello'
up
u
s
n
up
u
n
s
n
s
crunch('hello')
crunch('string')
s
up
u
s
continue
q
n
continue
help
exit crunch
continue
crunch('hello')
s
continue
s
continue
s
display dups_removed
s
continue
c
b 36
c
s
b 36
n
s
continue
var local
var
refresh
edit
step
help
?
s
continue
c
s
disp dups_removed
dis dups_removed
s
q
s
def test
test
test(5)
continue
s
display dups_removed
step
s
continue
s
continue
watch
s
continue
